services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db:5432/app_db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  tests:
    build: 
      context: .
      args:
        - INSTALL_PG_CLIENT=true
    depends_on:
      db:
        condition: service_healthy
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db:5432/test_db
    volumes:
      - .:/app
    command: >
      sh -c "python /app/docker/create_test_db.py &&
      pytest tests/ -v"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge